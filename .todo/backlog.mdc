---
description: 
globs: 
alwaysApply: false
---
# SOL-Bot バックログ

#### フェーズ別タスクリスト

| フェーズ | 目的 | 完了条件 | 作業粒度 |
|---|---|---|---|
| P0 ― 安全ネット | "やらかさない"仕組みを先に敷く | LIVE 停止スイッチ が 10 秒で押せる | 2 d |
| P1 ― インフラ Hardening | 勝手に動き出せる CI/CD + Secrets | main push → EC2 → LIVE 再起動まで全自動 | 3 d |
| P2 ― 監視 & ログ可視化 | 失敗を 5 分以内に検知 | Grafana に「残高・PnL・Error Rate」3 枚 | 2 d |
| P3 ― リスクロジック実戦テスト | 24 h 無人で Paper-Trade | simulation モードでノーエラー通過 | 3 d |
| P4 ― Runbook & リハーサル | 障害対応ドキュメント & Drill 完了 | "EC2 停止→復旧" をペアで 1 回成功 | 1 d |
| P5 ― Go-Live | 実弾投入 & 監視運用開始 | 週次決算まで問題なし | - |

P0フェーズのタスクが完了次第、P1フェーズに進み、その後のスプリントでP2、P3、P4、P5と進んでいきます。

<!-- REF-030〜REF-034タスクはスプリントに移動して完了しました -->
<!-- TST-050〜REF-057タスクはスプリントに移動して完了しました -->


## P0 ― 安全ネット（"やらかさない"仕組みを先に敷く）

// SEC-004タスクはスプリントに移動しました

## P1 ― インフラ Hardening（勝手に動き出せる CI/CD + Secrets）

// SEC-005タスクはスプリントに移動しました
// SEC-006タスクはスプリントに移動しました
// INF-024タスクはスプリントに移動しました
// DAT-015タスクはスプリントに移動しました

## P2 ― 監視 & ログ可視化（失敗を 5 分以内に検知）
- [ ] OBS-001: Bot側メトリクスエンドポイントの実装
      - 📅 Due        : 2026-06-05
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : Prometheusテキスト形式の/metricsエンドポイントを実装。orders_total（Counter）、account_balance（Gauge）、order_latency_ms（Histogram）など主要なメトリクスを公開。

- [ ] OBS-002: Prometheus設定の調整
      - 📅 Due        : 2026-06-10
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-001
      - 🏷️  Label      : ops
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : prometheus.ymlにsolbotジョブを追加し、targets: ['solbot-prod:3000']とmode=LIVEラベルを設定。スクレイプ間隔とタイムアウト設定も最適化。

- [ ] OBS-003: Grafana DataSource自動プロビジョニング
      - 📅 Due        : 2026-06-12
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-002
      - 🏷️  Label      : infra
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : monitoring/grafana/provisioning/datasources/solbot.yamlを追加し、Prometheusデータソースを自動設定。docker-compose up実行時に「Prometheus (solbot)」データソースが自動作成されることを確認。

- [ ] OBS-004: PnL & 残高ダッシュボードの作成
      - 📅 Due        : 2026-06-15
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-003
      - 🏷️  Label      : feat
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : 「残高」「累積PnL」「日次PnL」を表示するGrafanaダッシュボードを作成。solbot_balance_usdtを$balance変数で切り替え可能にし、過去24時間の推移を可視化。


- [ ] OBS-005: Bot健康状態ダッシュボードの作成
      - 📅 Due        : 2026-06-18
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-003
      - 🏷️  Label      : feat
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : 90パーセンタイルのorder_latency_ms、error_rate、heartbeat_age_secを表示するダッシュボードを作成。閾値はlatency>300ms=オレンジ、>800ms=赤と設定。

- [ ] OBS-006: インフラ資源ダッシュボードの作成
      - 📅 Due        : 2026-06-20
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-003
      - 🏷️  Label      : infra
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : Grafana「Node Exporter Full」（ID 1860）と「Container Overview」（ID 193）をインポートし、CPUとメモリ使用率、ディスク容量、ネットワークトラフィックを監視。

- [ ] OBS-007: アラートルールYAMLの作成
      - 📅 Due        : 2026-06-25
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-004, OBS-005
      - 🏷️  Label      : ops
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : Low Balance（balance_usdt < 300 5分間継続）、Error Burst（rate(app_errors_total[5m]) > 3）、Latency Spike（histogram_quantile(0.9, sum(rate(order_latency_ms_bucket[5m])) by (le)) > 500）などのアラートルールを実装。

- [ ] OBS-008: Alertmanager Discord Route拡張
      - 📅 Due        : 2026-06-28
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : OBS-007
      - 🏷️  Label      : ops
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : Alertmanagerにseverity: warningルートを追加し、repeat_interval: 30mに短縮。amtool alert add LowBalanceでDiscordに通知が送られることを確認。

## P3 ― リスクロジック実戦テスト（24 h 無人で Paper-Trade）

- [ ] RISK-006: 日次DDおよび緊急停止ロジックの検証
      - 📅 Due        : 2026-07-15
      - 👤 Owner      : @nijor
      - 🏷️  Label      : test
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : 日次ドローダウン制限（5%超で取引停止24h）と大幅価格変動時の緊急停止機能（15%以上の急落時に50%ポジション縮小）が正しく動作することを検証。シナリオテストの実装と自動テストによる検証。

- [ ] OPS-002: E2E Smoke in Paper Modeテスト
      - 📅 Due        : 2026-07-20
      - 👤 Owner      : @nijor
      - 🏷️  Label      : test
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : OPERATION_MODE=simulationで24時間連続実行し、メモリリークや例外発生がないことを確認。リソース使用量推移グラフの生成とアラート機能のテストも実施。

## P4 ― Runbook & リハーサル（障害対応ドキュメント & Drill 完了）

- [ ] OPS-001: Bot運用・障害対応Runbookの作成
      - 📅 Due        : 2026-07-05
      - 👤 Owner      : @nijor
      - 🏷️  Label      : doc
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : docs/runbook.md作成。起動/停止手順、ロールバック方法、緊急停止手順、Slack/Discord通知フロー、Paper Mode切替手順、監視アラート対応手順を記載。

- [ ] DOC-007: 開発者オンボーディングQuick Startの作成
      - 📅 Due        : 2026-07-10
      - 👤 Owner      : @nijor
      - 🏷️  Label      : doc
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : docs/onboarding.md作成。5〜10分で環境構築からバックテスト実行、コード修正、テスト実行までのQuick Startフローを整備。

## P5 ― Go-Live（実弾投入 & 監視運用開始）


## PXX ― いずれやるタスク。
- [ ] REF-037: ESM移行計画の見直しと段階的アプローチ
      - 📅 Due        : 2023-12-15
      - 👤 Owner      : @nijor
      - 🏷️  Label      : infra
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : ずっとESM環境完全化を目指していたがとん挫。ESM化の優先度を下げ、段階的移行プランを策定。実働化を阻害しない範囲で対応。REF-037,038は緊急度低。

- [ ] REF-038: CommonJS/ESM混在環境の安定化
      - 📅 Due        : 2023-12-20
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : REF-030
      - 🏷️  Label      : infra
      - 🩺 Health     : ⏳
      - 📊 Progress   : 0%
      - ✎ Notes      : ずっとESM環境完全化を目指していたがとん挫。現状のCommonJS/ESM混在環境でのテスト安定化。Jest設定の最小変更で対応。REF-037,038は緊急度低。



## 完了済みタスク（アーカイブ待ち）

- [x] DAT-009: マルチタイムフレームデータ取得の実装
      - 📅 Due        : 2026-01-08
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : 1m、15m、1h、1d全てのタイムフレームデータを取得し、Parquet形式で保存する機能を実装。テストコードも作成。

- [x] ALG-033: レジーム判定ロジックの実装強化
      - 📅 Due        : 2026-01-12
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : MA-Slope、ATR%、ADX、Price Locationを組み合わせた強化レジーム判定アルゴリズムを実装し、トレンド環境の検出精度を向上

// TST-002タスクはアーカイブまたはスプリントに既に存在するため削除しました
// PERF-001タスクはアーカイブまたはスプリントに既に存在するため削除しました
// INF-007タスクはアーカイブまたはスプリントに既に存在するため削除しました
- [x] SEC-001: API Key Secret Manager対応
      - 📅 Due        : 2026-01-10
      - 👤 Owner      : @nijor
      - 🏷️  Label      : security
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : AWS Parameter Store、GCP Secret Manager、環境変数、ファイルベースなど複数バックエンドに対応した抽象シークレットマネージャーを実装

- [x] CICD-002: TodoフォーマットのGitHub Actionsチェック
      - 📅 Due        : 2025-12-30
      - 👤 Owner      : @nijor
      - 🏷️  Label      : infra
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : PR時のTodoタスク検証、フォーマットチェック、PRマージ時の自動ステータス更新を実装。PRテンプレートも作成し、Todoタスク参照を強制

- [x] PERF-005: バックテスト実行の--quietモード追加
      - 📅 Due        : 2026-01-12
      - 👤 Owner      : @nijor
      - 🏷️  Label      : perf
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : Binance / Bybit / KuCoin stub を用いた end-to-end backtest

- [x] ALG-034: トレンドフォローエンジン実装
      - 📅 Due        : 2026-01-20
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : ALG-033
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : Donchianブレイク+ADXによるエントリー、Parabolic SARによる追従、トレイリングストップの実装完了

- [x] ALG-035: レンジ/ミーンリバースエンジン実装
      - 📅 Due        : 2026-01-25
      - 👤 Owner      : @nijor
      - 🔗 Depends-on : ALG-033
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : DonchianRange基準のグリッド注文、Maker-only Limit注文方式、ポジション上限とエスケープ条件の実装完了

- [x] INF-018: 監視ダッシュボードの構築
      - 📅 Due        : 2026-02-05
      - 👤 Owner      : @nijor
      - 🏷️  Label      : infra
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : Prometheus+GrafanaでCPU/Memのリソース監視ダッシュボード＋アラーティング＋Discordへの通知。メトリクスエクスポーターを実装し、システムリソースとトレーディングパフォーマンスの監視が可能に。

- [x] PERF-003: バックテスト処理速度とメモリ使用量の最適化
      - 📅 Due        : 2026-02-07
      - 👤 Owner      : @nijor
      - 🏷️  Label      : perf
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : メモリ使用量モニタリングクラスを実装し、バッチ処理による最適化、GC間隔設定などを追加。大量データでのバックテストを効率化。

- [x] ALG-036: BacktestRunner の重複 trade 集計修正
      - 📅 Due        : 2026-01-29
      - 👤 Owner      : @assistant
      - 🏷️  Label      : bug
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : lastTradeIndex追跡とユニークIDの付与による重複防止を実装。processedTradeIdsセットによる重複検出も追加。スプリントに移動済み。

- [x] REF-018: 二重 require / console.log ガード除去
      - 📅 Due        : 2026-01-29
      - 👤 Owner      : @nijor
      - 🏷️  Label      : refactor
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : backtestRunner.ts内のconsole.logをlogger.*に統一し、quietモードチェックを強化。スプリントに移動済み。

- [x] RISK-004: ATR==0のケースにフォールバックstopDistance実装
      - 📅 Due        : 2026-02-01
      - 👤 Owner      : @nijor
      - 🏷️  Label      : bug
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : 市場の低ボラティリティでATR=0となるケースでのstopDistance計算クラッシュ防止。IncrementalATRクラスと各戦略に実装済み。DEFAULT_ATR_PERCENTAGE、MIN_STOP_DISTANCE_PERCENTAGE、MIN_ATR_VALUEをパラメータ化

- [x] OMS-013: createOrder → simulateFill 時の ID / 状態同期
      - 📅 Due        : 2026-02-03
      - 👤 Owner      : @assistant
      - 🏷️  Label      : bug
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : createOrderを修正してIDを返すように変更し、TradingEngineのprocessSignalsメソッドでsimulatedFillにIDを渡すよう実装。OrderUtilsモジュールで注文状態の同期とマッピングを実装。

- [x] CONF-005: ParameterService env 置換時の型キャスト
      - 📅 Due        : 2026-02-05
      - 👤 Owner      : @nijor
      - 🏷️  Label      : bug
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : processEnvVariables で環境変数を自動的に適切な型(number/boolean/string)に変換する機能を実装。${VAR:number:123}のような型ヒント構文もサポート。

- [x] INF-019: docker-compose node_modules を named volume 化
      - 📅 Due        : 2026-02-05
      - 👤 Owner      : @operator
      - 🏷️  Label      : infra
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : docker-compose.ymlで既にnode_modulesがnamed volumeとして設定されていることを確認。`volumes: node_modules:`の定義も完了

// SEC-002タスクはアーカイブまたはスプリントに既に存在するため削除しました

// INF-023タスクはW9スプリントに移動したため削除しました

// TST-003タスクはアーカイブまたはスプリントに既に存在するため削除しました
- [x] OPT-001: 高度戦略のOptunaスペース追加
      - 📅 Due        : 2025-10-25
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : ATR_THRESHOLD、TrailingStopFactor、GridATRMultiplierをOptunaに追加し最適化フレームワーク実装完了

- [x] DATA-011: Candle.timestamp型統一
      - 📅 Due        : 2024-02-15
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : Candle.timestamp型をnumber | stringに統一し、isNumericTimestamp型ガード関数とnormalizeTimestamp変換関数を実装。ISO文字列とUNIXタイムスタンプの両方に対応。

// CICD-004タスクはW8スプリントに移動したため削除しました
// SEC-003タスクはW8スプリントに移動したため削除しました

// TST-014タスクはW9スプリントに移動したため削除しました

// PERF-006タスクはW9スプリントに移動したため削除しました

// REF-019タスクはスプリントに移動したため削除しました

// OMS-010タスクはアーカイブまたはスプリントに既に存在するため削除しました
- [x] API-021: 成行注文時のprice=undefined問題
      - 📅 Due        : 2024-02-09
      - 👤 Owner      : @nijor
      - 🏷️  Label      : bug
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : Bitget/Bybitで成行注文にprice=undefinedを渡すとエラーになる問題を解決。Order.price型をnumber | undefinedに統一し、特殊な型対応と関数実装により解決しました。

- [x] API-023: OrderTypeとccxtマッピング
      - 📅 Due        : 2024-02-09
      - 👤 Owner      : @nijor
      - 🏷️  Label      : feat
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : 全コンポーネントのJSDocコメントを統一フォーマットで整理（ライブラリ出力にも対応）

- [x] REF-027: ESMインポートパス問題修正
      - 📅 Due        : 2026-07-20
      - 👤 Owner      : @nijor
      - 🏷️  Label      : refactor
      - 🩺 Health     : ✅
      - 📊 Progress   : 100%
      - ✎ Notes      : ESM変換後の.mjsファイルに残っている壊れたインポートパスを修正するスクリプト（fix-esm-import-paths.js）を実装完了。'path: '→'path'、'url: '→'url'、__dirname"→__dirname、'../../'strategies/meanReversionStrategy''→'../../strategies/meanReversionStrategy.js'のような壊れたパターンを検出し修正。正規表現による置換パターンを多数実装し、全ファイルを自動的に修正。パスの正規化、拡張子の追加、壊れた文字列や構文の修正により、ESM環境でのモジュール解決問題を解決。package.jsonに「fix:esm-imports」コマンドも追加。















