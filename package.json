{
  "name": "sol-bot",
  "version": "1.0.0",
  "description": "Algorithmic trading bot for SOL/USDT and other crypto pairs",
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.mjs",
      "require": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./core": {
      "import": "./dist/core/index.mjs",
      "require": "./dist/core/index.js",
      "types": "./dist/core/index.d.ts"
    },
    "./strategies": {
      "import": "./dist/strategies/index.mjs",
      "require": "./dist/strategies/index.js",
      "types": "./dist/strategies/index.d.ts"
    },
    "./utils": {
      "import": "./dist/utils/index.mjs",
      "require": "./dist/utils/index.js",
      "types": "./dist/utils/index.d.ts"
    },
    "./services": {
      "import": "./dist/services/index.mjs",
      "require": "./dist/services/index.js",
      "types": "./dist/services/index.d.ts"
    },
    "./data": {
      "import": "./dist/data/index.mjs",
      "require": "./dist/data/index.js",
      "types": "./dist/data/index.d.ts"
    },
    "./indicators": {
      "import": "./dist/indicators/index.mjs",
      "require": "./dist/indicators/index.js",
      "types": "./dist/indicators/index.d.ts"
    },
    "./config": {
      "import": "./dist/config/index.mjs",
      "require": "./dist/config/index.js",
      "types": "./dist/config/index.d.ts"
    },
    "./optimizer": {
      "import": "./dist/optimizer/index.mjs",
      "require": "./dist/optimizer/index.js",
      "types": "./dist/optimizer/index.d.ts"
    }
  },
  "scripts": {
    "build": "npm run build:cjs && npm run build:esm && npm run build:copy-mjs",
    "build:cjs": "tsc -p tsconfig.cjs.json",
    "build:esm": "tsc -p tsconfig.esm.json",
    "build:copy-mjs": "node scripts/copy-mjs-files.js",
    "start": "node dist/index.js",
    "dev": "node --loader ts-node/esm src/index.ts",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:smoke": "ts-node --transpile-only src/core/smokeTest.ts",
    "test:file": "jest --testPathPattern",
    "test:fix": "npm run fix:jest-mocks && npm test",
    "test:debug": "node --experimental-vm-modules --inspect-brk node_modules/jest/bin/jest.js --runInBand",
    "test:parallel": "node scripts/test-sharding.js",
    "test:parallel:fast": "node scripts/test-sharding.js fast",
    "test:parallel:medium": "node scripts/test-sharding.js medium",
    "test:parallel:slow": "node scripts/test-sharding.js slow",
    "test:parallel:heavy": "node scripts/test-sharding.js heavy",
    "test:parallel:core": "node scripts/test-sharding.js core",
    "test:parallel:esm": "node scripts/test-sharding.js esm",
    "test:parallel:all": "node scripts/test-sharding.js",
    "test:ci": "node scripts/test-sharding.js fast 2 && node scripts/test-sharding.js medium 2 && node scripts/test-sharding.js slow 1 && node scripts/test-sharding.js core 1 && node scripts/test-sharding.js heavy 1",
    "convert:tests": "node scripts/convert-tests-to-esm.js",
    "cleanup:mjs": "node scripts/enhance-mjs-cleanup.js",
    "fix:esm-imports": "node scripts/fix-esm-import-paths.js",
    "fix:jest-mocks": "node scripts/fix-jest-mocks-for-esm.js",
    "fix:esm:all": "npm run cleanup:mjs && npm run fix:esm-imports && npm run fix:jest-mocks",
    "lint": "eslint src --ext .ts",
    "format": "prettier --write \"src/**/*.ts\"",
    "backtest": "cross-env TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' ts-node --transpile-only src/core/backtestRunner.ts",
    "backtest:multi": "node --loader ts-node/esm src/scripts/multiSymbolBacktest.ts",
    "backtest:optimize": "node --loader ts-node/esm src/scripts/optimizeParameters.ts",
    "backtest:report": "node --loader ts-node/esm src/scripts/generateReport.ts",
    "collect-data": "node --loader ts-node/esm src/scripts/dataCollection.ts",
    "analyze-market": "node --loader ts-node/esm src/scripts/marketAnalysis.ts",
    "lint:fix": "eslint --fix \"src/**/*.ts\"",
    "todo-lint": "node --import ts-node/register src/scripts/todo-lint.ts",
    "manual-todo-lint": "node --loader ts-node/esm src/scripts/manual-todo-lint.ts",
    "todo-fix": "node --loader ts-node/esm src/scripts/fix-todo-issues.ts",
    "todo-fix-backlog": "node --loader ts-node/esm src/scripts/fix-todo-backlog.ts",
    "todo-fix-status": "node --loader ts-node/esm src/scripts/fix-todo-status.ts",
    "todo-fix-labels": "node --loader ts-node/esm src/scripts/fix-todo-labels.ts",
    "todo-missing-labels": "node --loader ts-node/esm src/scripts/fix-todo-labels.ts",
    "todo-fix-duplicates": "node --loader ts-node/esm src/scripts/fix-todo-duplicates.ts",
    "todo-fix-completion": "node --loader ts-node/esm src/scripts/fix-todo-completion.ts",
    "fetch-hourly": "node --loader ts-node/esm src/data/fetchHourlyData.ts",
    "fetch-data": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts",
    "fetch-data:all": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts fetch-all",
    "fetch-data:1m": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts fetch 1m",
    "fetch-data:15m": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts fetch 15m",
    "fetch-data:1h": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts fetch 1h",
    "fetch-data:1d": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts fetch 1d",
    "start-data-service": "node --loader ts-node/esm src/data/fetchMultiTimeframeData.ts start-all",
    "optimize": "node --loader ts-node/esm src/optimizer/runOptimization.ts",
    "generate-sample-data": "node --loader ts-node/esm src/data/generateSampleData.ts",
    "backtest:smoke": "ts-node --transpile-only --compiler-options={\\\"module\\\":\\\"commonjs\\\",\\\"moduleResolution\\\":\\\"node\\\"} src/core/backtestRunner.ts --smoke-test --days 3",
    "backtest:optimized": "node scripts/optimizedBacktest.js",
    "validate-sample-data": "node --loader ts-node/esm src/data/runSampleTest.ts",
    "cli": "node --loader ts-node/esm src/scripts/cli.ts",
    "cli:backtest": "node --loader ts-node/esm src/scripts/cli.ts --mode backtest",
    "cli:backtest:multi": "node --loader ts-node/esm src/scripts/cli.ts --mode backtest --symbols SOL/USDT,BTC/USDT --timeframes 1h,4h",
    "cli:help": "node --loader ts-node/esm src/scripts/cli.ts --help",
    "cli:multiconfig": "node --loader ts-node/esm src/scripts/cli.ts --config-override src/config/multiSymbolConfig.example.json",
    "cli:multisymbols": "node --loader ts-node/esm src/scripts/cli.ts --mode backtest --symbols SOL/USDT,BTC/USDT,ETH/USDT --timeframes 1h,4h",
    "calibrate-atr": "node --loader ts-node/esm src/scripts/calibrateATR.ts",
    "multi-exchange": "node --loader ts-node/esm src/scripts/multiExchangeSetup.ts",
    "multi-exchange:demo": "node --loader ts-node/esm src/scripts/multiExchangeSetup.ts --mode demo --symbols SOL/USDT,BTC/USDT",
    "data-lifecycle": "node --loader ts-node/esm src/scripts/data-lifecycle-manager.ts",
    "data-lifecycle:now": "node --loader ts-node/esm src/scripts/data-lifecycle-manager.ts --run-now",
    "data-lifecycle:schedule": "node --loader ts-node/esm src/scripts/data-lifecycle-manager.ts --schedule",
    "data-lifecycle:help": "node --loader ts-node/esm src/scripts/data-lifecycle-manager.ts --help",
    "test:detect-handles": "jest --detectOpenHandles",
    "test:verbose": "jest --verbose",
    "test:one": "jest --testNamePattern",
    "test:esm": "node --experimental-vm-modules ./scripts/run-esm-tests-safely.js",
    "test:esm:basic": "node --experimental-vm-modules ./scripts/run-esm-tests-safely.js src/__tests__/esm-basic.test.mjs",
    "test:esm:single": "node --experimental-vm-modules ./scripts/run-esm-tests-safely.js",
    "test:esm:watch": "node --experimental-vm-modules ./scripts/run-esm-tests-safely.js --watch",
    "test:cleanup": "node scripts/cleanup-test-resources.js",
    "test:runner": "node scripts/run-esm-tests.js",
    "test:runner:detect": "node scripts/run-esm-tests.js --detect-handles",
    "test:runner:coverage": "node scripts/run-esm-tests.js --coverage",
    "test:all": "npm run test && npm run test:esm",
    "test:stable": "npm run test:detect-handles",
    "test:cjs": "jest",
    "test:mjs": "node --experimental-vm-modules ./scripts/run-esm-tests-safely.js",
    "test:stable:esm": "node scripts/run-esm-tests-stable.js",
    "test:stable:all": "npm run test:cjs && npm run test:stable:esm",
    "test:noncrash": "jest --detectOpenHandles --forceExit",
    "test:timebomb": "node scripts/run-esm-tests-stable.js --timeout=120000",
    "fix:test-imports": "node scripts/fix-test-imports.js",
    "fix:test-imports:dry": "node scripts/fix-test-imports-dry-run.js",
    "test:dual-format:cjs": "node src/examples/dual-format-usage.js",
    "test:dual-format:esm": "node --experimental-modules src/examples/dual-format-usage.mjs",
    "smoketest": "cross-env TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' ts-node --transpile-only src/core/smokeTest.ts",
    "backtest:smoke:stable": "node scripts/run-backtest-smoke.js",
    "verify:ref-031": "node scripts/verify-ref-031.js",
    "fix:esm:imports": "node scripts/fix-esm-imports.js",
    "test:stableJest": "node scripts/run-jest-tests.js",
    "test:stableEsm": "node --experimental-vm-modules scripts/run-jest-tests.mjs",
    "test:stableJest:file": "node scripts/run-jest-tests.js",
    "test:stableEsm:file": "node --experimental-vm-modules scripts/run-jest-tests.mjs",
    "test:stableJest:simple": "node scripts/run-jest-tests.js src/__tests__/simple.test.js",
    "test:stableEsm:basic": "node --experimental-vm-modules scripts/run-jest-tests.mjs src/__tests__/esm-basic.test.mjs",
    "test:fullStable": "npm run test:stableJest && npm run test:stableEsm",
    "test:all:unified": "node scripts/run-unified-tests.js",
    "test:unified": "node scripts/run-unified-tests.js",
    "test:unified:report": "node scripts/run-unified-tests.js --report",
    "test:unified:cjs": "node scripts/run-unified-tests.js --cjs-only",
    "test:unified:esm": "node scripts/run-unified-tests.js --esm-only"
  },
  "keywords": [
    "crypto",
    "trading",
    "bot",
    "algorithm",
    "solana"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@aws-sdk/client-glacier": "^3.804.0",
    "@aws-sdk/client-s3": "^3.804.0",
    "@aws-sdk/client-ssm": "^3.521.0",
    "@aws-sdk/credential-providers": "^3.806.0",
    "@google-cloud/secret-manager": "^5.2.0",
    "@solana/web3.js": "^1.87.6",
    "apache-arrow": "^14.0.2",
    "async-mutex": "^0.5.0",
    "axios": "^1.6.2",
    "ccxt": "^3.1.36",
    "chalk": "^4.1.2",
    "commander": "^13.1.0",
    "csv-parser": "^3.0.0",
    "dotenv": "^16.3.1",
    "duckdb": "^1.2.1",
    "express": "^4.18.2",
    "fast-csv": "^4.3.6",
    "js-yaml": "^4.1.0",
    "lru-cache": "^11.1.0",
    "node-cron": "^3.0.3",
    "p-limit": "^3.1.0",
    "parquetjs": "^0.11.2",
    "prom-client": "^14.2.0",
    "technicalindicators": "^3.1.0",
    "winston": "^3.10.0",
    "yargs": "^17.7.2"
  },
  "devDependencies": {
    "@codemod/cli": "^3.3.0",
    "@types/chalk": "^0.4.31",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.3",
    "@types/js-yaml": "^4.0.9",
    "@types/lru-cache": "^7.10.9",
    "@types/node": "^20.4.5",
    "@types/node-cron": "^3.0.11",
    "@typescript-eslint/eslint-plugin": "^6.2.0",
    "@typescript-eslint/parser": "^6.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "glob": "^9.3.5",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.6.2",
    "js-yaml": "^4.1.0",
    "jscodeshift": "^17.3.0",
    "module-alias": "^2.2.3",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6"
  },
  "_moduleAliases": {
    "@app": "dist"
  }
}
